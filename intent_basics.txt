Intent用法大全（来自因特网）


显示intent
隐式intent

对于明确指出了目标组件名称的Intent，我们称之为“显式Intent”。Intent I = new Intent(this.A.class)。通常用户同一个app里的跳转。

对于没有明确指出目标组件名称的Intent，则称之为“隐式 Intent”。例如：
 Intent intent = new Intent(Intent.ACTION_SEND);

Android系统使用IntentFilter 来寻找与隐式Intent相关的对象。

Intent通常由以下部分构成：
Action:  Intent intent = new Intent(Intent.ACTION_SEND);
Data:
Category:被执行动作的附加信息; LAUNCHER_CATEGORY 表示Intent 的接受者应该在Launcher中作为顶级应用出现
Type: 显式指定Intent的数据类型（MIME）。一般Intent的数据类型能够根据数据本身进行判定，但是通过设置这个属性，
可以强制采用显式指定的类型而不再进行推导。 
Extras:使用extras可以为组件提供扩展信息，比如，如果要执行“发送电子邮件”这个动作，可以将电子邮件的标题、正文等保存在extras里
，传给电子邮件发送组件。 

EG:
VIEW_ACTION content://contacts/1-- 显示标识符为"1"的联系人的详细信息
EDIT_ACTION content://contacts/1-- 编辑标识符为"1"的联系人的详细信息
VIEW_ACTION content://contacts/-- 显示所有联系人的列表
PICK_ACTION content://contacts/-- 显示所有联系人的列表，并且允许用户在列表中选择一个联系人，
然后把这个联系人返回给父activity。例如：电子邮件客户端可以使用这个Intent，要求用户在联系人列表中选择一个联系人 

对于直接Intent，Android不需要去做解析，因为目标组件已经很明确，Android需要解析的是那些间接Intent
，通过解析，将 Intent映射给可以处理此Intent的Activity、IntentReceiver或Service。
Intent解析机制主要是通过查找已注册在AndroidManifest.xml中的所有IntentFilter及其中定义的Intent，
最终找到匹配的Intent。在这个解析过程中，Android是通过Intent的action、type、category这三个属性来进行判断的，
判断方法如下：
如果Intent指明定了action，则目标组件的IntentFilter的action列表中就必须包含有这个action，否则不能匹配;
如果Intent没有提供type，系统将从data中得到数据类型。和action一样，目标组件的数据类型列表中必须包含Intent的数据类型
，否则不能匹配。
如果Intent中的数据不是content: 类型的URI，而且Intent也没有明确指定它的type，
将根据Intent中数据的scheme (比如 http: 或者mailto: ) 进行匹配。
同上，Intent 的scheme必须出现在目标组件的scheme列表中。
如果Intent指定了一个或多个category，这些类别必须全部出现在组建的类别列表中。
比如Intent中包含了两个类别：LAUNCHER_CATEGORY 和 ALTERNATIVE_CATEGORY，解析得到的目标组件必须至少包含这两个类别。 

======================================================

基本用法：
startActivity
startService

显示调用(无需define in AndroidManifest.xml)
Intent intent = new Intent(this,ABCActivity);
startActivity(intent)

隐式调用(需要在AndroidManifest.xml定义IntentFiler才能使用）：
private static String MY_ACTION = "com.view.my_action";
Intent intent = new Intent(); 
intent.setAction(MY_ACTION);
或者// Intent intent = new Intent(MY_ACTION);
startActivity(Intent);

如果是想启动另外一个应用程序，如B类是在另外一个应用程序的入口,在其activity中“再”另外加上一个intent-filter

<activity android:name=".B" android:label="@string/app_name">

    <intent-filter>
    
    <action android:name="android.intent.action.MAIN" />
    
    <category android:name="android.intent.category.LAUNCHER" />
    
    </intent-filter>

    <intent-filter>
    
       <action android:name="com.view.my_action"/>
       
       <action android:name="android.intent.action.DEFAULT" />
       
       <category android:name="android.intent.category.DEFAULT" />
    
    </intent-filter>

</activity>
